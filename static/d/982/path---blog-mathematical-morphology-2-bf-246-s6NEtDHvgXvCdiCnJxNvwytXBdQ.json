{"data":{"markdownRemark":{"frontmatter":{"title":"Mathematical morphology visualized","date":"2019-08-14","tags":["computer vision","image analysis","math"]},"html":"<h2>Mathematical Morphology</h2>\n<p>Mathematical morphology uses set theory to describe shapes. In image processing, operators from mathematical morphology can be used to pre-process or post-process images. The basic four morphological operators are dilation, erosion, opening, and closing. All operations involve an <strong>structuring element</strong>, and the result of each operation really describes the interaction between the input image and the structuring element. These operations are also usually performed for binary images. There are functions defined in OpenCV that applies these four operations. I will include these functions below, as they are super easy to use. You only need two inputs: the input image and a structuring element. Definitely play around with them, but the visualization below shows you exactly what each operation is doing. </p>\n<p>In the examples below, the structuring element is 3 pixels by 3 pixels. You can think of it as a filter or kernel, similar to convolution. An <em>anchor</em> is defined for each structuring element that maps to each pixels of the output.</p>\n<p>In the visualizations below, the left image is the input image, and the right image is the output as the structuring element is slid across. Each box represents a pixel. An orange pixel represents a pixel in the foreground, while a grey pixel is part of the background. The final output is displayed when the structuring element has slid through all the output pixels.</p>\n<h2>Dilation</h2>\n<p>This operation \"dilates\" the shape in the image. This means that it can smooth out some nooks and crannies in the original image shape.</p>\n<p>When sliding the structuring element, each output pixel that was originally in the background (grey) can either stay grey or turn to the foreground (orange).</p>\n<p>rules:</p>\n<ul>\n<li>Any overlap of structuring element and orange pixel, output turns orange.</li>\n<li>No overlap of structuring element and orange pixel, output stays grey.</li>\n</ul>\n<p><img src=\"/dialate-d6ec2fc1995eeeb95b917db2c6e1cea0.gif\"></p>\n<h2>Erosion</h2>\n<p>This operation \"erodes\" the shape in the image. This means that it can smooth out rough edges in the original image shape. The idea is that a foreground pixel will remain if you can fit the whole structuring element anchored at that pixel.</p>\n<p>When sliding the structuring element, each output pixel that was originally in the foreground (orange) can either stay orange or turn into the background (grey).</p>\n<p>rules:</p>\n<ul>\n<li>Full overlap of structuring element and orange pixel, output stays orange.</li>\n<li>Else, output turns grey.</li>\n</ul>\n<p><img src=\"/erode-b4f8cd8e2ed187ab5ae45f3b8134b940.gif\"></p>\n<h2>Opening</h2>\n<p>First apply erosion, then apply dilation!</p>\n<h2>Closing</h2>\n<p>First apply dilation, then apply erosion!</p>"}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"mathematical-morphology"}}