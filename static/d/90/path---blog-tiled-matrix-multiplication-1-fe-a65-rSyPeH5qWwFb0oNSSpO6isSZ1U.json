{"data":{"markdownRemark":{"frontmatter":{"title":"Tiled matrix multiplication","date":"2019-08-24","tags":["deep learning","matrix multiplication","CUDA"]},"html":"<p>Let's talk about tiled matrix multiplication today. This is an algorithm performed on GPUs due to the parallel nature of matrix multiplication. We will especially look at a method called \"tiling,\" which is used to reduce global memory accesses by taking advantage of the shared memory on the GPU. Tiling can be seen as a way to boost execution efficiency of the kernel. We will then examine the CUDA kernel code that do exactly what we see in the visualization, which shows what each thread within a block is doing to compute the output.</p>\n<h2>Why do you care?</h2>\n<p>The efficiency of calculating matrix multiplication is the backbone of everything. Everything as in rendering graphics and machine learning. Ever heard of Tensors? Yeah...everything is matrix multiplication I swear.</p>\n<h2>Some background</h2>\n<p>The main idea of using GPUs for computation is simple. The idea is to get more work done in less time. Imagine you have an assignment with 4 math problems to solve, each problem taking 1 hour. You can spend 4 hours and do all 4 problems by yourself. But what if you have 3 other friends with the same assignment? Then you tell your friends to each solve 1 problem and then you all will share the solutions...because sharing is caring. This means in 1 hour, your assignment would be finished.</p>\n<p>To finish off this analogy, each one of your friends is a worker, or an unit of execution, a thread. When you have a lot of workers (threads) to manage, you might want to organize them in a way. Below is the organization of threads in CUDA terms.</p>\n<ul>\n<li>Thread: single unit of execution --- each thread has its own memory called <strong>registers</strong></li>\n<li>Block: group of threads --- all threads in a block has access to a shared memory called <strong>shared memory</strong></li>\n<li>Grid: group of blocks --- all threads in a grid has access to <strong>global memory</strong> and <strong>constant memory</strong></li>\n</ul>\n<p><img src=\"/tmm-59dd890f48435e692c47919d0df4a5e6.gif\"></p>\n<h2>Kernel code</h2>"}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"tiled-matrix-multiplication"}}